scalar Date

type User {
  id: ID!
  email: String!
  name: String!
  password: String
  isVerified: Boolean
  isBlocked: Boolean
  providerId: String
  registrationType: String
  createdAt: Date
}

type Category {
  id: Int
  Image: String
  Title: String
  Description: String
  BackgroundColor: String
  createdAt: Date
  Report: Report
}

type Report {
  id: Int
  userId: Int
  Category: Category
  CategoryId: Int
  SubCategory: Int
  latitude: Float
  longitude: Float
  IncidentDate: Date
  IncidentTime: String
  SuspectName: String
  CostMoney: Int
  floor: Int
  Description: String
  createdAt: Date
}

type Token {
  id: Int
  userId: Int
  token: String
  createdAt: Date
}

type News {
  id: Int
  Image: String
  Title: String
  Tagline: String
  Description: String
  createdAt: Date
  CategoryId: Int
  CategoryName: String
}

type Favorites {
  id: Int
  userId: Int
  newsId: Int
  createdAt: Date
  News: News
}

type FlagReason {
  id: Int
  reason: String
  createdAt: Date
}

type FlagReasonReponse {
  status: Boolean
  message: String
  data: FlagReason
}

type FlagReasonArrayReponse {
  status: Boolean
  message: String
  data: [FlagReason]
}

type FlagReport {
  id: Int
  userId: Int
  reasonId: Int
  reportId: Int
  reason: String
  User: User
  Report: Report
  createdAt: Date
}

type FlagReportReponse {
  status: Boolean
  message: String
  data: FlagReport
}

type FlagReportArrayReponse {
  status: Boolean
  message: String
  data: [FlagReport]
}

type SuccessType {
  status: Boolean
  message: String
  data: User
}

type ReportReponse {
  status: Boolean
  message: String
  data: Report
}

type CategoryResponse {
  status: Boolean
  message: String
  data: Category
}

type NewsResponse {
  status: Boolean
  message: String
  data: News
}

type FavoriteResponse {
  status: Boolean
  message: String
  data: [Favorites]
}

type ArrayUserResponse {
  status: Boolean
  message: String
  data: [User]
}

type ArrayReportResponse {
  status: Boolean
  message: String
  data: [Report]
}

type ArrayCategoryResponse {
  status: Boolean
  message: String
  data: [Category]
}

type ArrayNewsResponse {
  status: Boolean
  message: String
  data: [News]
}

type ArrayUserResponse {
  status: Boolean
  message: String
  data: [User]
}

type Query {
  loginUser(email: String, password: String): SuccessType!
  getAllUsers: ArrayUserResponse

  getReports: ArrayReportResponse
  filterReports(showIds: [Int!]): ArrayReportResponse
  filterReportsByDate(from: Date!, to: Date!): ArrayReportResponse
  getFavoriteByUserId(userId: Int!): FavoriteResponse
  searchFav(userId: Int!, text: String!): FavoriteResponse
  getCategories: ArrayCategoryResponse

  getNews: ArrayNewsResponse
  searchNews(text: String!): ArrayNewsResponse
  getFlagReports: FlagReportArrayReponse
  getFlagReasons: FlagReasonArrayReponse
}

type Mutation {
  # AUTH MUTATIONS
  addUser(email: String!, name: String!, password: String!): SuccessType
  socialMediaLogin(
    providerId: String!
    registrationType: String!
    name: String
    email: String
  ): SuccessType
  forgotPassword(email: String!): SuccessType
  OtpVerify_Email(token: String!, email: String!): SuccessType
  # verifyOtp(token: String!, email: String!): SuccessType
  resendOtp(email: String!): SuccessType
  NewPassword(password: String!, email: String!): SuccessType
  changePassword(
    id: Int!
    currentPassword: String!
    newPassword: String!
  ): SuccessType
  deleteUser(id: Int!): ArrayUserResponse
  updateUser(
    id: Int!
    email: String!
    name: String
    isBlocked: Boolean
  ): SuccessType

  # REPORTS MUTAIONS
  CreateReport(
    userId: Int
    CategoryId: Int!
    SubCategory: Int
    latitude: Float!
    longitude: Float!
    SuspectName: String!
    CostMoney: Int!
    IncidentDate: Date!
    IncidentTime: String!
    Description: String!
    floor: Int!
  ): ReportReponse

  EditReport(
    id: Int!
    CategoryId: Int
    SubCategory: Int
    latitude: Float
    longitude: Float
    IncidentDate: Date
    SuspectName: String
    CostMoney: Int
    Description: String
    floor: Int
  ): ReportReponse

  deleteReport(id: Int!): ArrayReportResponse

  # REPORT MUTATIONS
  CreateCatagory(
    Image: String!
    Title: String!
    Description: String!
    BackgroundColor: String!
  ): CategoryResponse

  EditCategory(
    id: Int!
    Image: String
    Title: String
    Description: String
    BackgroundColor: String
  ): CategoryResponse

  deleteCategory(id: Int!): ArrayCategoryResponse

  # NEW MUTATIONS
  CreateNews(
    CategoryId: Int!
    CategoryName: String!
    Image: String!
    Title: String!
    Tagline: String!
    Description: String!
  ): NewsResponse

  EditNews(
    id: Int!
    Image: String
    Title: String
    Tagline: String
    Description: String
    CategoryId: Int
    CategoryName: String
  ): NewsResponse
  deleteNews(id: Int!): ArrayNewsResponse
  addToFavorite(userId: Int!, newsId: Int!): FavoriteResponse

  # FLAG MUTATIONS
  CreateReason(reason: String!): FlagReasonReponse
  EditReason(id: Int!, reason: String): FlagReasonReponse
  deleteReason(id: Int!): FlagReasonArrayReponse
  CreateFlagReport(
    userId: Int!
    reasonId: Int!
    reason: String!
    reportId: Int!
  ): FlagReportReponse
}
