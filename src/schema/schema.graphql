scalar Date

# schema.graphql
type Animal {
  id: ID!
  name: String!
  fact: String
}

type User {
    id: ID!
    email: String!
    name: String!
    password: String!
    isVerified: Boolean
}

type SuccessType {
  status: Boolean
  message: String
  data: User
}


type Token {
  id:      Int  
  userId:  Int
  token:   String 
  createdAt:  Date
}


type Query {
  getAllAnimals: [Animal]
  getAllUsers: [User]
  loginUser(email: String, password: String): User!

}

type Mutation {
    addUser(email: String!, name: String, password: String): User
    changePassword(id: Int!, currentPassword: String!, newPassword: String!): User
    deleteUser(id: Int!): [User]
    verifyOtp(token: String!, email: String!): SuccessType
    resendOtp(email: String!): User
    updateUser(id: Int!, email: String!,  name: String): User
    forgotPassword(email: String!): SuccessType
    OtpVerify_Email(token: String!):SuccessType
}



